<?xml version="1.0" encoding="UTF-8"?>
<project default="clean" basedir="." name="lucee-lcov-extension">
    <description>Build process for the LCOV Code Coverage extension</description>
    
    <!-- path definitions -->
    <property name="src" location="source"/>
    <property name="srcImg" location="source/images"/>
    <property name="temp" location="temp"/>
    <property name="target" location="target"/>
    
    <target name="init" description="initialize the environment">
        <delete dir="${temp}"/>
        <delete dir="${target}"/>
        <mkdir dir="${temp}"/>
        <mkdir dir="${target}/"/>
    </target>

    <target name="createManifest" depends="init" description="create Manifest file">
        <tstamp>
            <format property="NOW" pattern="yyyy-MM-dd HH:mm:ss"/>
        </tstamp>
        <echo file="${temp}/META-INF/MANIFEST.MF">Manifest-Version: 1.0
Built-Date: ${NOW}
version: "${bundleversion}"
id: "${id}"
name: "${label}"
description: "${description}"
lucee-core-version: "${luceeCoreVersion}"
</echo>
    </target>

    <target name="createVersionFile" depends="createManifest" description="create version.cfc file">
        <!-- Get git commit hash if available -->
        <exec executable="git" outputproperty="git.commit" failifexecutionfails="false" errorproperty="">
            <arg value="rev-parse"/>
            <arg value="--short"/>
            <arg value="HEAD"/>
        </exec>
        <property name="git.commit" value="unknown"/>

        <!-- Get git branch if available -->
        <exec executable="git" outputproperty="git.branch" failifexecutionfails="false" errorproperty="">
            <arg value="rev-parse"/>
            <arg value="--abbrev-ref"/>
            <arg value="HEAD"/>
        </exec>
        <property name="git.branch" value="unknown"/>

        <!-- Create version.cfc in source directory -->
        <echo file="${src}/components/lucee/extension/lcov/version.cfc">// Auto-generated - DO NOT MODIFY
component {
	public string function getVersion() {
		return "${bundleversion}";
	}
}
</echo>
    </target>
    
    <target name="zip" depends="createVersionFile" description="generate the distribution">
        <!-- copy the logo -->
        <copy todir="${temp}/META-INF" failonerror="false">
            <fileset dir="${srcImg}/">
                <include name="logo.png"/>
            </fileset>
        </copy>
        <!-- copy the components -->
        <copy todir="${temp}/components" failonerror="false">
            <fileset dir="${src}/components">
                <include name="**/*"/>
            </fileset>
        </copy>
        <!-- copy the functions -->
        <copy todir="${temp}/functions" failonerror="false">
            <fileset dir="${src}/functions">
                <include name="**/*"/>
            </fileset>
        </copy>
        <!-- Zip everything -->
        <zip destfile="${target}/${filename}-${bundleversion}.lex">
            <zipfileset dir="${temp}"/>
        </zip>
    </target>
    
    <target name="clean" depends="zip" description="clean up">
        <!-- <delete dir="${temp}"/> -->
    </target>
</project>